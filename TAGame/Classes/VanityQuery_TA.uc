/*******************************************************************************
* VanityQuery_TA generated by MVN.RLLib using AssetExtraction.
* MVN.RLLib Â© 2019 Martin VN. All rights reserved.
* All rights belong to their respective owners.
*******************************************************************************/
class VanityQuery_TA extends Component;

struct native VanityQueryRequest
{
	var GFxShell_X Shell;
	var _Types_TA.EVanityType VanityType;
	var array<UniqueNetId> PlayerIds;
	var int NumIdsToQuery;
	var int NumQueriesCompleted;
	var bool bForced;

	structdefaultproperties
	{
		Shell=none
		VanityType=VT_None
		PlayerIds.Empty
		
		NumIdsToQuery=0
		NumQueriesCompleted=0
		bForced=false
	}
};

struct native VanityQuerySet
{
	var array<UniqueNetId> PlayerIds;
	var _Types_TA.EVanityType VanityType;
	var bool bForced;

	structdefaultproperties
	{
		PlayerIds.Empty
		VanityType=VT_None
		bForced=false
	}
};

var transient int MaxNumberQueriesAllowed;
var transient array<VanityQuerySet> ActiveQueries;
var transient array<VanityQueryRequest> QueuedRequests;

defaultproperties
{
	MaxNumberQueriesAllowed=10
	ActiveQueries(0)=(PlayerIds=none,VanityType=VT_None,bForced=false)
	ActiveQueries(1)=(PlayerIds=none,VanityType=VT_Banner,bForced=false)
	ActiveQueries(2)=(PlayerIds=none,VanityType=VT_Avatar,bForced=false)
	ActiveQueries(3)=(PlayerIds=none,VanityType=VT_AvatarBorder,bForced=false)
}