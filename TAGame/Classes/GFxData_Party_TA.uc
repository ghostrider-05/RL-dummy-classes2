/*******************************************************************************
* GFxData_Party_TA generated by MVN.RLLib using AssetExtraction.
* MVN.RLLib © 2019 Martin VN. All rights reserved.
* All rights belong to their respective owners.
*******************************************************************************/
class GFxData_Party_TA extends GFxDataSingleton_X;

enum EPsyNetPartyStatus
{
	PsyNetParty_Disabled,
	PsyNetParty_Connecting,
	PsyNetParty_Connected,
	PsyNetParty_Disconnected,
	PsyNetParty_MAX
};

struct GFxPartyMember
{
	var databinding UniqueNetId PersonaId;
	var databinding string PlayerName;
	var databinding string ProfileId;
	var databinding Texture PlayerAvatarTexture;
	var databinding Qword ClubID;
	var databinding bool bSplitScreen;
	var databinding bool bLocalSplitScreen;
	var databinding bool bHasProfile;
	var databinding bool bPartyLeader;
	var databinding bool bIsPlayerTrading;
	var databinding bool bIsPlayerInMatch;
	var databinding bool bPlayerCanTrade;

	structdefaultproperties
	{
		PersonaId=Uid=,
/* Exception thrown while deserializing PersonaId
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		PlayerName=""
		ProfileId=""
		PlayerAvatarTexture=none
		
		bSplitScreen=false
		bLocalSplitScreen=false
		bHasProfile=false
		bPartyLeader=false
		bIsPlayerTrading=false
		bIsPlayerInMatch=false
		bPlayerCanTrade=false
	}
};

var databinding array<GFxPartyMember> Members;
var databinding int MaxPartySize;
var databinding name Processing;
var transient OnlineGameParty_X OnlineParty;
var /*0x00008000-0x00000000*/ transient Personas_TA PersonasData;
var /*0x00018000-0x00000000*/ export editinline OnlineClubCache_X Clubs;
var /*0x00008000-0x00000000*/ VanitySetManager_TA VanityManager;
var databinding GFxData_Party_TA.EPsyNetPartyStatus PsyNetPartyStatus;
var /*0x00010000-0x00000000*/ const localized string RegionRestrictedPlayerTrade;
var GFxModal_X PendingTradeInviteModal;
var GFxModal_X PartyErrorModal;
var bool bPendingAllowTrade;
var /*0x00008000-0x00000000*/ CrossplayConfig_X CrossplayConfig;

defaultproperties
{
	RegionRestrictedPlayerTrade="Sorry, your country’s regulations prevent player to player item trading."
	TableName=Party
	bLevelTransitionPersistent=true
}