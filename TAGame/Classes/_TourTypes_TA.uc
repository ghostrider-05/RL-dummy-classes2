/*******************************************************************************
* _TourTypes_TA generated by MVN.RLLib using AssetExtraction.
* MVN.RLLib Â© 2019 Martin VN. All rights reserved.
* All rights belong to their respective owners.
*******************************************************************************/
class _TourTypes_TA extends Object
	abstract;

const TOUR_MATCH_NONE = -1;

enum ETourSeedType
{
	TourSeedType_Skill,
	TourSeedType_Random,
	TourSeedType_MAX
};

struct TourReward
{
	var /*0x00010000-0x00000000*/ array<OnlineProductData> Rewards;
	var /*0x00010000-0x00000000*/ int Placement;

	structdefaultproperties
	{
		Rewards.Empty
		Placement=0
	}
};

struct TourPlayer
{
	var /*0x00010000-0x00000000*/ UniqueNetId PlayerID;
	var /*0x00010000-0x00000000*/ string PlayerName;
	var /*0x00010000-0x00000000*/ transient Texture Avatar;

	structdefaultproperties
	{
		PlayerID=Uid=,
/* Exception thrown while deserializing PlayerID
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		PlayerName=""
		Avatar=none
	}
};

struct TourTeam
{
	var /*0x00010000-0x00000000*/ Qword TeamID;
	var /*0x00010000-0x00000000*/ CustomMatchTeamSettings Settings;
	var /*0x00010000-0x00000000*/ array<TourPlayer> Players;
	var /*0x00010000-0x00000000*/ Qword Seed;
	var /*0x00010000-0x00000000*/ int Difficulty;

	structdefaultproperties
	{
		
		Settings=(Name="",Colors=(TeamColorID=0,CustomColorID=0,bTeamColorSet=false,bCustomColorSet=false),GameScore=0)
		Players.Empty
		
		Difficulty=0
	}
};

struct TourMatchGame
{
	var /*0x00010000-0x00000000*/ int GameTimeSeconds;
	var /*0x00010000-0x00000000*/ bool bOverTime;
	var /*0x00010000-0x00000000*/ bool bAborted;
	var /*0x00010000-0x00000000*/ Qword Winner;
	var /*0x00010000-0x00000000*/ int Scores[2];

	structdefaultproperties
	{
		GameTimeSeconds=0
		bOverTime=false
		bAborted=false
		
		Scores[0]=0
		Scores[1]=0
	}
};

struct TourPlayerStats
{
	var /*0x00010000-0x00000000*/ UniqueNetId PlayerID;
	var /*0x00010000-0x00000000*/ int TeamNum;
	var /*0x00010000-0x00000000*/ int Score;
	var /*0x00010000-0x00000000*/ int Saves;
	var /*0x00010000-0x00000000*/ int Shots;
	var /*0x00010000-0x00000000*/ int Goals;
	var /*0x00010000-0x00000000*/ int Assists;

	structdefaultproperties
	{
		PlayerID=Uid=,
/* Exception thrown while deserializing PlayerID
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		TeamNum=0
		Score=0
		Saves=0
		Shots=0
		Goals=0
		Assists=0
	}
};

struct TourMatch
{
	var /*0x00010000-0x00000000*/ int MatchID;
	var /*0x00010000-0x00000000*/ Qword Teams[2];
	var /*0x00010000-0x00000000*/ Qword Winner;
	var /*0x00010000-0x00000000*/ array<TourMatchGame> Games;

	structdefaultproperties
	{
	}
};

struct IntPair
{
	var /*0x00010000-0x00000000*/ int A;
	var /*0x00010000-0x00000000*/ int B;

	structdefaultproperties
	{
		A=0
		B=0
	}
};

struct QWORDPair
{
	var /*0x00010000-0x00000000*/ Qword A;
	var /*0x00010000-0x00000000*/ Qword B;

	structdefaultproperties
	{
		
		
	}
};

struct TourMatchNode
{
	var /*0x00010000-0x00000000*/ int MatchID;
	var /*0x00010000-0x00000000*/ int Round;
	var /*0x00010000-0x00000000*/ int Order;
	var /*0x00010000-0x00000000*/ QWORDPair Teams;
	var /*0x00010000-0x00000000*/ int NextMatchID;
	var /*0x00010000-0x00000000*/ IntPair PrevMatch;

	structdefaultproperties
	{
		MatchID=-1
		Round=0
		Order=0
		Teams=A=,
/* Exception thrown while deserializing Teams
System.ArgumentException: De aangevraagde waarde B is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		NextMatchID=-1
		PrevMatch=(A=0,B=0)
	}
};

struct TourPlacementInfo
{
	var /*0x00010000-0x00000000*/ databinding int Placement;
	var /*0x00010000-0x00000000*/ databinding string Name;
	var /*0x00010000-0x00000000*/ databinding int Value;
	var /*0x00010000-0x00000000*/ databinding Qword TeamID;
	var /*0x00010000-0x00000000*/ databinding UniqueNetId PlayerID;

	structdefaultproperties
	{
		Placement=0
		Name=""
		Value=0
		
		PlayerID=Uid=,
/* Exception thrown while deserializing PlayerID
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
	}
};

struct TourLeaderboard
{
	var /*0x00010000-0x00000000*/ array<TourPlacementInfo> TeamGoals;
	var /*0x00010000-0x00000000*/ array<TourPlacementInfo> PlayerGoals;
	var /*0x00010000-0x00000000*/ array<TourPlacementInfo> PlayerAssists;
	var /*0x00010000-0x00000000*/ array<TourPlacementInfo> PlayerSaves;

	structdefaultproperties
	{
		TeamGoals.Empty
		PlayerGoals.Empty
		PlayerAssists.Empty
		PlayerSaves.Empty
	}
};

struct TourMatchPlayerStats
{
	var /*0x00010000-0x00000000*/ databinding name Name;
	var /*0x00010000-0x00000000*/ databinding UniqueNetId Id;
	var /*0x00010000-0x00000000*/ databinding int Score;
	var /*0x00010000-0x00000000*/ databinding int Goals;
	var /*0x00010000-0x00000000*/ databinding int Assists;
	var /*0x00010000-0x00000000*/ databinding int Saves;
	var /*0x00010000-0x00000000*/ databinding int Shots;

	structdefaultproperties
	{
		Name=None
		Id=Uid=,
/* Exception thrown while deserializing Id
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		Score=0
		Goals=0
		Assists=0
		Saves=0
		Shots=0
	}
};

struct TourMatchTeamDetails
{
	var /*0x00010000-0x00000000*/ Qword TeamID;
	var /*0x00010000-0x00000000*/ array<int> GoalsPerGame;
	var /*0x00010000-0x00000000*/ array<TourMatchPlayerStats> CumulativePlayerStats;

	structdefaultproperties
	{
		
		GoalsPerGame.Empty
		CumulativePlayerStats.Empty
	}
};

struct TourBracket
{
	var /*0x00010000-0x00000000*/ Qword TournamentID;
	var /*0x00010000-0x00000000*/ array<TourTeam> Teams;
	var /*0x00010000-0x00000000*/ array<TourMatch> Matches;
	var /*0x00010000-0x00000000*/ TourLeaderboard Leaderboard;
	var /*0x00010000-0x00000000*/ array<ShopCurrencyInfo> CurrentPayouts;

	structdefaultproperties
	{
		
		Teams.Empty
		Matches.Empty
		Leaderboard=(TeamGoals=none,PlayerGoals=none,PlayerAssists=none,PlayerSaves=none)
		CurrentPayouts.Empty
	}
};

struct TourServerSettings
{
	var /*0x00010000-0x00000000*/ Qword TournamentID;
	var /*0x00010000-0x00000000*/ int MatchID;
	var /*0x00010000-0x00000000*/ string GameTags;
	var /*0x00010000-0x00000000*/ _Types_TA.EMatchTieBreaker TieBreaker;
	var /*0x00010000-0x00000000*/ byte GameMode;
	var /*0x00010000-0x00000000*/ array<name> DisabledMaps;
	var /*0x00010000-0x00000000*/ name MapSetName;
	var /*0x00010000-0x00000000*/ int SeriesLength;
	var /*0x00010000-0x00000000*/ int TeamSize;
	var /*0x00010000-0x00000000*/ array<TourTeam> Teams;
	var /*0x00010000-0x00000000*/ array<Qword> BotTeams;
	var /*0x00010000-0x00000000*/ array<TourMatchGame> Games;
	var /*0x00010000-0x00000000*/ array<UniqueNetId> SpectatorPlayerIDs;
	var /*0x00010000-0x00000000*/ UniqueNetId CreatorPlayerID;
	var /*0x00010000-0x00000000*/ byte MinPlayersPerTeam;
	var /*0x00010000-0x00000000*/ Qword MatchExpireTimestamp;
	var /*0x00010000-0x00000000*/ int MinPlayersMetWaitTimeSeconds;

	structdefaultproperties
	{
		
		MatchID=-1
		GameTags=""
		TieBreaker=MatchTieBreaker_FirstScore
		GameMode=0
		DisabledMaps.Empty
		MapSetName=None
		SeriesLength=0
		TeamSize=0
		Teams.Empty
		BotTeams.Empty
		Games.Empty
		SpectatorPlayerIDs.Empty
		CreatorPlayerID=Uid=,
/* Exception thrown while deserializing CreatorPlayerID
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		MinPlayersPerTeam=1
		
		MinPlayersMetWaitTimeSeconds=0
	}
};

struct TourPrivateCredentials
{
	var /*0x00010000-0x00000000*/ string Title;
	var /*0x00010000-0x00000000*/ string Password;

	structdefaultproperties
	{
		Title=""
		Password=""
	}
};

struct TourCreateSettings
{
	var /*0x00010000-0x00000000*/ TourSettings_TA Settings;
	var /*0x00010000-0x00000000*/ TourPrivateCredentials PrivateSettings;
	var /*0x00010000-0x00000000*/ array<TourReward> Rewards;

	structdefaultproperties
	{
		Settings=none
		PrivateSettings=(Title="",Password="")
		Rewards.Empty
	}
};

struct TourSearchSettings
{
	var /*0x00010000-0x00000000*/ string Text;
	var /*0x00010000-0x00000000*/ int RankMin;
	var /*0x00010000-0x00000000*/ int RankMax;
	var /*0x00010000-0x00000000*/ array<int> GameModes;
	var /*0x00010000-0x00000000*/ array<string> Regions;
	var /*0x00010000-0x00000000*/ int TeamSize;
	var /*0x00010000-0x00000000*/ int BracketSize;
	var /*0x00010000-0x00000000*/ bool bEnableCrossplay;
	var /*0x00010000-0x00000000*/ Qword StartTime;
	var /*0x00010000-0x00000000*/ Qword EndTime;
	var /*0x00010000-0x00000000*/ bool bShowFull;
	var /*0x00010000-0x00000000*/ bool bShowIneligibleRank;

	structdefaultproperties
	{
		Text=""
		RankMin=-1
		RankMax=-1
		GameModes.Empty
		Regions.Empty
		TeamSize=0
		BracketSize=0
		bEnableCrossplay=false
		
		
		bShowFull=false
		bShowIneligibleRank=false
	}
};

struct GFxTournamentReward
{
	var() /*0x00010000-0x00000000*/ databinding int Placement;
	var() /*0x00010000-0x00000000*/ databinding ProductInstanceID InstanceID;

	structdefaultproperties
	{
		Placement=0
		InstanceID=UpperBits=,
/* Exception thrown while deserializing InstanceID
System.ArgumentException: De aangevraagde waarde LowerBits is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
	}
};

struct TournamentResult
{
	var /*0x00010000-0x00000000*/ databinding int Difficulty;
	var /*0x00010000-0x00000000*/ databinding int Placement;
	var /*0x00010000-0x00000000*/ databinding int Score;
	var /*0x00010000-0x00000000*/ databinding int ResultStanding;

	structdefaultproperties
	{
		Difficulty=0
		Placement=0
		Score=0
		ResultStanding=0
	}
};

struct TourResult
{
	var /*0x00010000-0x00000000*/ databinding Qword TournamentID;
	var /*0x00010000-0x00000000*/ databinding int Difficulty;
	var /*0x00010000-0x00000000*/ databinding int Placement;

	structdefaultproperties
	{
		
		Difficulty=0
		Placement=0
	}
};

struct TournamentEndData
{
	var /*0x00010000-0x00000000*/ Qword CycleID;
	var /*0x00010000-0x00000000*/ int WeekIndex;
	var /*0x00010000-0x00000000*/ array<TournamentResult> OldWeeklyResults;
	var /*0x00010000-0x00000000*/ TournamentResult Result;
	var /*0x00010000-0x00000000*/ array<ShopCurrencyInfo> CurrencyRewards;
	var /*0x00010000-0x00000000*/ array<ShopCurrencyInfo> OldWeeklyCurrencies;
	var /*0x00010000-0x00000000*/ array<ShopCurrencyInfo> WeeklyCurrencies;
	var /*0x00010000-0x00000000*/ array<ShopCurrencyInfo> FinalCurrencies;

	structdefaultproperties
	{
		
		WeekIndex=0
		OldWeeklyResults.Empty
		Result=(Difficulty=0,Placement=0,Score=0,ResultStanding=0)
		CurrencyRewards.Empty
		OldWeeklyCurrencies.Empty
		WeeklyCurrencies.Empty
		FinalCurrencies.Empty
	}
};

struct FaceItReservationMatchInfo
{
	var /*0x00010000-0x00000000*/ int PartnerID;
	var /*0x00010000-0x00000000*/ int ServerId;
	var /*0x00010000-0x00000000*/ bool bIsCrossPlatform;

	structdefaultproperties
	{
		PartnerID=0
		ServerId=0
		bIsCrossPlatform=false
	}
};

var /*0x00010000-0x00000000*/ const array<name> DisabledMutatorCategories;
var /*0x00010000-0x00000000*/ const array<name> DisabledMutatorSettings;

defaultproperties
{
	DisabledMutatorCategories(0)=BotDifficulty
	DisabledMutatorCategories(1)=OvertimeRules
	DisabledMutatorCategories(2)=MatchGames
	DisabledMutatorSettings(0)=UnlimitedTime
}