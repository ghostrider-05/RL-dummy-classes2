/*******************************************************************************
* OnlineGameDLC_X generated by MVN.RLLib using AssetExtraction.
* MVN.RLLib Â© 2019 Martin VN. All rights reserved.
* All rights belong to their respective owners.
*******************************************************************************/
class OnlineGameDLC_X extends Online_X;

enum DLCOwnershipState
{
	DLCOwnershipState_Unknown,
	DLCOwnershipState_Owned,
	DLCOwnershipState_NotOwned,
	DLCOwnershipState_Error,
	DLCOwnershipState_MAX
};

struct native SteamWebRequestData
{
	var WebRequest_X Request;
	var UniqueNetId PlayerID;

	structdefaultproperties
	{
		Request=none
		
	}
};

struct native SteamJsonResponseGetPublisherAppOwnership3
{
	var Qword AppID;
	var Qword OwnerSteamID;
	var bool OwnsApp;
	var bool Permanent;
	var string TimeStamp;

	structdefaultproperties
	{
		
		
		OwnsApp=false
		Permanent=false
		TimeStamp=""
	}
};

struct native SteamJsonResponseGetPublisherAppOwnership2
{
	var array<SteamJsonResponseGetPublisherAppOwnership3> Apps;

	structdefaultproperties
	{
		Apps.Empty
	}
};

struct native SteamJsonResponseGetPublisherAppOwnership
{
	var SteamJsonResponseGetPublisherAppOwnership2 AppOwnership;

	structdefaultproperties
	{
		AppOwnership=(Apps=none)
	}
};

struct native SteamPlayerDLCOwnershipState
{
	var name Name;
	var Qword AppID;
	var transient OnlineGameDLC_X.DLCOwnershipState State;

	structdefaultproperties
	{
		Name=None
		
		State=DLCOwnershipState_Unknown
	}
};

struct native PlayerDLCInfo
{
	var UniqueNetId PlayerID;
	var array<SteamPlayerDLCOwnershipState> DLCs;
	var transient float TimeLastOwnershipRequest;

	structdefaultproperties
	{
		
		DLCs.Empty
		
		TimeLastOwnershipRequest=-1.0
	}
};

var() int SyncInterval;
var float PlayerOwnershipSyncInterval;
var array<PlayerDLCInfo> PlayerDLCInfos;
var transient array<SteamWebRequestData> SteamWebRequests;

defaultproperties
{
	SyncInterval=1800
	PlayerOwnershipSyncInterval=60.0
}