/*******************************************************************************
* BugReport_X generated by MVN.RLLib using AssetExtraction.
* MVN.RLLib Â© 2019 Martin VN. All rights reserved.
* All rights belong to their respective owners.
*******************************************************************************/
class BugReport_X extends Object
	native
	config(Engine);

enum EFileTruncateType
{
	FileTruncate_None,
	FileTruncate_KeepStart,
	FileTruncate_KeepEnd,
	FileTruncate_MAX
};

struct native BugReportSubmitterData
{
	var PlayerController Submitter;
	var string Name;
	var Vector Location;
	var Rotator Rotation;

	structdefaultproperties
	{
		Submitter=none
		Name=""
		Location=(X=0.0,Y=0.0,Z=0.0)
		Rotation=(Pitch=0,Yaw=0,Roll=0)
	}
};

struct native BugReportSystemData
{
	var string ComputerName;
	var string GameName;
	var string NetMode;
	var bool bClient;

	structdefaultproperties
	{
		ComputerName=""
		GameName=""
		NetMode=""
		bClient=false
	}
};

struct native BugReportPathData
{
	var string OutputPath;
	var string LogName;
	var string LogPath;
	var string ScreenShotPath;

	structdefaultproperties
	{
		OutputPath=""
		LogName=""
		LogPath=""
		ScreenShotPath=""
	}
};

struct native BugReportDescriptionData
{
	var string Title;
	var string ShortTitle;
	var string MetaTitle;
	var string Description;
	var string Email;

	structdefaultproperties
	{
		Title=""
		ShortTitle=""
		MetaTitle=""
		Description=""
		Email=""
	}
};

struct native FileUploadData
{
	var BugReport_X BugReport;
	var string BugID;
	var string Folder;
	var string FilePath;
	var BugReport_X.EFileTruncateType TruncateType;

	structdefaultproperties
	{
		BugReport=none
		BugID=""
		Folder=""
		FilePath=""
		TruncateType=FileTruncate_None
	}
};

struct native BugReportUploadTask
{
	var FileUploadData Data;
	var BugReportSystemData SystemData;
	var HttpRequestInterface HTTPRequest;
	var init string TaskName;
	var init string Error;

	structdefaultproperties
	{
		Data=(BugReport=none,BugID="",Folder="",FilePath="",TruncateType=FileTruncate_None)
		SystemData=(ComputerName="",GameName="",NetMode="",bClient=false)
		HTTPRequest=none
		TaskName=""
		Error=""
	}
};

var native const noexport Pointer VfTable_FTickableObject;
var globalconfig string BugReportClassName;
var() string URL;
var() int MaxFileSizeMegabytes;
var const transient string BugID;
var const transient BugReportSubmitterData SubmitterData;
var const transient BugReportSystemData SystemData;
var const transient BugReportPathData PathData;
var const transient BugReportDescriptionData DescriptionData;
var native const transient Pointer LogFile;
var const transient array<FileUploadData> FileUploads;
var const transient bool bUploadNextFile;
var const transient bool bSubmitted;

defaultproperties
{
	BugReportClassName="TAGame.BugReport_TA"
	MaxFileSizeMegabytes=2
}