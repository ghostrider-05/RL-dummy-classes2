/*******************************************************************************
* Tutorial_TA generated by MVN.RLLib using AssetExtraction.
* MVN.RLLib Â© 2019 Martin VN. All rights reserved.
* All rights belong to their respective owners.
*******************************************************************************/
class Tutorial_TA extends TickableStateObject_X;

enum EPlayerDriveType
{
	PlayerDriveType_All,
	PlayerDriveType_Player,
	PlayerDriveType_Bot,
	PlayerDriveType_MAX
};

enum ETutorialStatus
{
	TutorialStatus_None,
	TutorialStatus_Failed,
	TutorialStatus_Completed,
	TutorialStatus_MAX
};

enum ETutorialOutput
{
	TutorialOutput_Ended,
	TutorialOutput_Completed,
	TutorialOutput_Failed,
	TutorialOutput_ScreenFadedIn,
	TutorialOutput_ScreenFadedOut,
	TutorialOutput_AllMessagesDisplayed,
	TutorialOutput_Started,
	TutorialOutput_Reset,
	TutorialOutput_Skipped,
	TutorialOutput_AnswerRight,
	TutorialOutput_AnswerWrong,
	TutorialOutput_MAX
};

struct ActionNameInfo
{
	var array<name> ActionNames;

	structdefaultproperties
	{
		ActionNames.Empty
	}
};

struct ButtonInfo
{
	var string Text;
	var bool bCorrectAnswer;

	structdefaultproperties
	{
		Text=""
		
		bCorrectAnswer=false
	}
};

struct MessageInfo
{
	var string Title;
	var string Body;
	var array<ButtonInfo> Buttons;
	var array<ActionNameInfo> ActionNameList;

	structdefaultproperties
	{
		Title=""
		Body=""
		Buttons.Empty
		ActionNameList.Empty
	}
};

var transient SequenceAction KNode_Owner;
var transient PlayerController_TA PC;
var transient GameEvent_Tutorial_TA GameEvent;
var string ModalSectionName;
var transient GFxModal_X MessageModal;
var array<MessageInfo> Messages;
var int MessageIndex;
var float DisplayMessageStartTime;
var bool bEndTutorialOnFinalMessage;
var bool bCompleteTutorialOnFinalMessage;
var bool bInitialMessagesFinished;
var bool bFadeAudio;
var bool bSkipFadeIn;
var bool bFadeTransitionComplete;
var bool bTutorialStarted;
var bool bActionNameToDetectPressed;
var bool bCarTouched;
var bool bCompleteOnBallTouch;
var bool bFailTutorialOnOtherCarHitBall;
var bool bDestroyBallsOnFadeIn;
var bool bDestroyBotsOnFadeIn;
var bool bHasBot;
var bool bFoundBot;
var bool bStartWithSecondaryCamActive;
var bool bStartWithBoostMeterDisabled;
var bool bBotCanPlay;
var bool bStartBotOnAllMessagesDisplayed;
var bool bBallCanHitPlayersGoal;
var bool bCompleteOnLastBallTouched;
var bool bCompleteOnHitGoal;
var bool bFailOnHitGoal;
var bool bFreezeCarOnSpawn;
var bool bCanEverDodge;
var bool bCanEverDoubleJump;
var bool bTutorialFinished;
var bool bPauseDuringMessages;
var bool bCanResetTutorial;
var bool bCanSkipTutorial;
var bool bShowGameFinishMessage;
var bool bSkipped;
var bool bQuit;
var bool bReset;
var bool bTLog;
var MessageInfo CorrectAnswer;
var MessageInfo IncorrectAnswer;
var float StartFadeDisplayTime;
var Color FadeColor;
var float FadeTime;
var transient GFxShell_TA Shell;
var name ActionNameToDetect;
var float FailTimeAfterBallTouch;
var float CountdownTime;
var int BotTeam;
var float TutorialFailTime;
var float TutorialCompleteTime;
var float BallDestroyTimeOnTouch;
var float AllMessagesDisplayedTime;
var float WaitTimeBeforeCheckCompleteAction;
var ETutorialStatus TutorialStatus;
var float StartTime;
var string StartTimeString;
var array<string> UseActions;
var array<name> IgnoreActionPressList;
var array<name> FailedActionPressList;
var array<name> StartActionPressList;
var array<name> CompleteActionPressList;
var array<name> CompleteActionIgnorePressList;

defaultproperties
{
	bDestroyBotsOnFadeIn=true
	bBotCanPlay=true
	bCanEverDodge=true
	bCanEverDoubleJump=true
	bCanResetTutorial=true
	bCanSkipTutorial=true
	CountdownTime=-1.0
	bTickWhenGamePaused=true
}