/*******************************************************************************
* Parties_X generated by MVN.RLLib using AssetExtraction.
* MVN.RLLib Â© 2019 Martin VN. All rights reserved.
* All rights belong to their respective owners.
*******************************************************************************/
class Parties_X extends Object
	implements(OnlineLobbyInterface);

struct PsyNetPartyInfo
{
	var /*0x00010000-0x00000000*/ string PartyID;
	var /*0x00010000-0x00000000*/ Qword CreatedAt;
	var /*0x00010000-0x00000000*/ UniqueNetId CreatedByUserId;
	var /*0x00010000-0x00000000*/ string JoinID;

	structdefaultproperties
	{
		PartyID=""
		
		CreatedByUserId=Uid=,
/* Exception thrown while deserializing CreatedByUserId
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		JoinID=""
	}
};

struct PsyNetPartyMember
{
	var /*0x00010000-0x00000000*/ string PartyID;
	var /*0x00010000-0x00000000*/ UniqueNetId UserId;
	var /*0x00010000-0x00000000*/ string Username;
	var /*0x00010000-0x00000000*/ Qword JoinedAt;
	var /*0x00010000-0x00000000*/ string Role;

	structdefaultproperties
	{
		PartyID=""
		UserId=Uid=,
/* Exception thrown while deserializing UserId
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		Username=""
		
		Role=""
	}
};

struct PartyInvite
{
	var /*0x00010000-0x00000000*/ UniqueNetId UserId;
	var /*0x00010000-0x00000000*/ string Username;
	var /*0x00010000-0x00000000*/ string PartyID;
	var /*0x00010000-0x00000000*/ Qword InvitedAt;
	var /*0x00010000-0x00000000*/ Qword AcceptedAt;

	structdefaultproperties
	{
		UserId=Uid=,
/* Exception thrown while deserializing UserId
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
		Username=""
		PartyID=""
		
		
	}
};

var /*0x00010000-0x00000000*/ ActiveLobbyInfo ActiveLobby;
var /*0x00010000-0x00000000*/ UniqueLobbyId LastActiveLobby;
var /*0x00010000-0x00000000*/ UniqueNetId PartyLeaderID;
var /*0x00018000-0x00000000*/ PsyNet_X PsyNet;
var /*0x00018000-0x00000000*/ OnlineGameParty_X OnlineGameParty;
var() /*0x00010000-0x00000000*/ export editinline PartyMessageQueue_X MessageQueue;
var /*0x00010000-0x00000000*/ PsyNetConnection_X PsyNetConnection;
var /*0x00010000-0x00000000*/ PsyNetChannel_X PsyNetChannel;
var /*0x00010000-0x00000000*/ export editinline PsyNetServiceSubscriptions_X Subscriptions;
var /*0x00010000-0x00000000*/ PartyPlatformSession_X PlatformSession;
var /*0x00010000-0x00000000*/ PartySequence_CreateParty_X SequenceCreateParty;
var /*0x00010000-0x00000000*/ PartySequence_JoinParty_X SequenceJoinParty;
var /*0x00010000-0x00000000*/ PartySequence_LeaveParty_X SequenceLeaveParty;
var /*0x00010000-0x00000000*/ PartySequence_InviteToParty_X SequenceInviteToParty;
var /*0x00010000-0x00000000*/ bool bRejoiningParty;
var() /*0x00010000-0x00000000*/ float SecondToWaitForPerConReconnect;
var() /*0x00010000-0x00000000*/ string PartySetting_PsyNetPartyId;
var() /*0x00010000-0x00000000*/ string PartySetting_JoinKey;

defaultproperties
{
	PartyLeaderID=Uid=,
/* Exception thrown while deserializing PartyLeaderID
System.ArgumentException: De aangevraagde waarde NpId is niet gevonden.
   bij System.Enum.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument)
   bij System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   bij System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   bij System.Enum.Parse(Type enumType, String value)
   bij UELib.Core.UDefaultProperty.Deserialize() in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 212
   bij UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in C:\Projects\RLMM\Ulibrary\Unreal-Library\Core\Classes\UDefaultProperty.cs:regel 662 */
	MessageQueue=PartyMessageQueue_X'Default__Parties_X.DefaultMessageQueue'
	SecondToWaitForPerConReconnect=10.0
	PartySetting_PsyNetPartyId="PsyNetPartyId"
	PartySetting_JoinKey="PsyNetJoinKey"
}